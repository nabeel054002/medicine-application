// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/coupons/applicable": {
            "post": {
                "description": "Returns coupons applicable based on cart items, order total, and timestamp.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Get applicable coupons for a medicine cart",
                "parameters": [
                    {
                        "description": "Applicable Coupons Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ApplicableCouponsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ApplicableCouponsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "DB error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/coupons/create": {
            "post": {
                "description": "Adds a new coupon with applicable discounts, time windows, and restrictions.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Create a new coupon",
                "parameters": [
                    {
                        "description": "Coupon to create",
                        "name": "coupon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Coupon"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/coupons/validate": {
            "post": {
                "description": "Validates a coupon code based on order total, timestamp, and user usage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coupons"
                ],
                "summary": "Validate a coupon",
                "parameters": [
                    {
                        "description": "Coupon Validation Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ValidateCouponRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ValidateCouponResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ApplicableCouponsRequest": {
            "type": "object",
            "properties": {
                "cart_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CartItem"
                    }
                },
                "order_total": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "description": "optional for now",
                    "type": "string"
                }
            }
        },
        "models.ApplicableCouponsResponse": {
            "type": "object",
            "properties": {
                "applicable_coupons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Coupon"
                    }
                }
            }
        },
        "models.CartItem": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "models.Coupon": {
            "type": "object",
            "properties": {
                "applicable_for_categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "applicable_for_medicine_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "code": {
                    "type": "string"
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Discount"
                    }
                },
                "expiry_date": {
                    "type": "string"
                },
                "max_usage_per_user": {
                    "type": "integer"
                },
                "min_order_value": {
                    "type": "number"
                },
                "terms_and_conditions": {
                    "type": "string"
                },
                "time_windows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TimeWindow"
                    }
                },
                "usage_type": {
                    "$ref": "#/definitions/models.UsageType"
                }
            }
        },
        "models.Discount": {
            "type": "object",
            "properties": {
                "discount_type": {
                    "description": "'items' or 'charges' // can make this also into a separate type but tbh its fine for now",
                    "type": "string"
                },
                "discount_value": {
                    "type": "number"
                }
            }
        },
        "models.TimeWindow": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "models.UsageType": {
            "type": "string",
            "enum": [
                "one_time",
                "multi_use",
                "time_based"
            ],
            "x-enum-varnames": [
                "OneTime",
                "MultiUse",
                "TimeBased"
            ]
        },
        "models.ValidateCouponRequest": {
            "type": "object",
            "properties": {
                "coupon_code": {
                    "type": "string"
                },
                "order_total": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.ValidateCouponResponse": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Coupon Service API",
	Description:      "API to apply and validate coupons for medicine cart",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
